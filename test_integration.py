#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞ —Å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º Telegram.
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –±–æ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
"""

import asyncio
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from bot import config, handlers

async def test_web_app_button():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º Telegram...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_user_id = 123456789
    test_url = f"{config.SERVER_URL}?uid={test_user_id}"
    
    print(f"üì± –¢–µ—Å—Ç–æ–≤—ã–π URL: {test_url}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –∫–∞–∫ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ
    keyboard = [
        [InlineKeyboardButton(
            "üìö –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥", 
            web_app={"url": test_url}
        )]
    ]
    
    markup = InlineKeyboardMarkup(keyboard)
    
    print("‚úÖ –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print(f"üîó URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {test_url}")
    print("üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–Ω–æ–ø–∫–∏:")
    print(f"   - –¢–µ–∫—Å—Ç: 'üìö –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥'")
    print(f"   - –¢–∏–ø: web_app")
    print(f"   - URL: {test_url}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    if f"uid={test_user_id}" in test_url:
        print("‚úÖ UID –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ URL")
    else:
        print("‚ùå UID –ø–∞—Ä–∞–º–µ—Ç—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ URL")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print(f"\n‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"   - SERVER_URL: {config.SERVER_URL}")
    print(f"   - TELEGRAM_BOT_TOKEN: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if config.TELEGRAM_BOT_TOKEN != 'YOUR_TELEGRAM_BOT_TOKEN_HERE' else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"   - ADMIN_USER_IDS: {config.ADMIN_USER_IDS}")
    
    return True

def test_flask_routes():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Flask –º–∞—Ä—à—Ä—É—Ç–æ–≤."""
    
    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Flask –º–∞—Ä—à—Ä—É—Ç–æ–≤...")
    
    try:
        from bot.server import create_app
        app = create_app()
        
        with app.test_client() as client:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –º–∞—Ä—à—Ä—É—Ç—ã
            routes_to_test = [
                '/api/books',
                '/api/verify/123456789',
            ]
            
            for route in routes_to_test:
                response = client.get(route)
                print(f"   - {route}: {response.status_code}")
                
                if response.status_code == 200:
                    print(f"     ‚úÖ –ú–∞—Ä—à—Ä—É—Ç –¥–æ—Å—Ç—É–ø–µ–Ω")
                else:
                    print(f"     ‚ö†Ô∏è –ú–∞—Ä—à—Ä—É—Ç –≤–µ—Ä–Ω—É–ª –∫–æ–¥ {response.status_code}")
        
        print("‚úÖ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Flask: {e}")
        return False

def test_vue_build():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ Vue –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ."""
    
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏ Vue –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    import os
    
    dist_path = os.path.join(os.path.dirname(__file__), 'webapp', 'dist')
    index_path = os.path.join(dist_path, 'index.html')
    
    if os.path.exists(dist_path) and os.path.exists(index_path):
        print("‚úÖ Vue –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ")
        print(f"   - –ü—É—Ç—å –∫ dist: {dist_path}")
        print(f"   - index.html: {'‚úÖ –ù–∞–π–¥–µ–Ω' if os.path.exists(index_path) else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}")
        return True
    else:
        print("‚ùå Vue –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Å–æ–±—Ä–∞–Ω–æ")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./build.sh")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Book Bot...")
    print("=" * 50)
    
    tests = [
        ("–ö–Ω–æ–ø–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", test_web_app_button()),
        ("Flask –º–∞—Ä—à—Ä—É—Ç—ã", test_flask_routes()),
        ("Vue —Å–±–æ—Ä–∫–∞", test_vue_build()),
    ]
    
    results = []
    
    for test_name, test_coro in tests:
        try:
            if asyncio.iscoroutine(test_coro):
                result = await test_coro
            else:
                result = test_coro
            results.append((test_name, result))
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ '{test_name}': {e}")
            results.append((test_name, False))
    
    print("\n" + "=" * 50)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤:")
    
    passed = 0
    for test_name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"   - {test_name}: {status}")
        if result:
            passed += 1
    
    print(f"\nüéØ –ò—Ç–æ–≥–æ: {passed}/{len(results)} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == len(results):
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.")

if __name__ == "__main__":
    asyncio.run(main())