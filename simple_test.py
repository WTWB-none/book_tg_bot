#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞.
"""

import os
import sys

def test_project_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞."""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...")
    
    required_files = [
        'bot/__init__.py',
        'bot/config.py',
        'bot/database.py',
        'bot/handlers.py',
        'bot/server.py',
        'bot/main.py',
        'webapp/package.json',
        'webapp/vite.config.ts',
        'webapp/src/main.ts',
        'webapp/src/App.vue',
        'requirements.txt',
        'build.sh',
        'deploy.md',
    ]
    
    missing_files = []
    
    for file_path in required_files:
        full_path = os.path.join(os.path.dirname(__file__), file_path)
        if os.path.exists(full_path):
            print(f"   ‚úÖ {file_path}")
        else:
            print(f"   ‚ùå {file_path}")
            missing_files.append(file_path)
    
    if missing_files:
        print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {missing_files}")
        return False
    else:
        print("\n‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ!")
        return True

def test_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é."""
    
    print("\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é bot
        sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'bot'))
        
        import config
        
        print(f"   - SERVER_URL: {config.SERVER_URL}")
        print(f"   - TELEGRAM_BOT_TOKEN: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if config.TELEGRAM_BOT_TOKEN != 'YOUR_TELEGRAM_BOT_TOKEN_HERE' else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        print(f"   - ADMIN_USER_IDS: {config.ADMIN_USER_IDS}")
        print(f"   - TRIBUTE_API_URL: {config.TRIBUTE_API_URL}")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_vue_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É Vue –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    
    print("\nüì± –ü—Ä–æ–≤–µ—Ä–∫–∞ Vue –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    vue_files = [
        'webapp/src/views/CatalogView.vue',
        'webapp/src/views/BookView.vue',
        'webapp/src/views/ChapterView.vue',
        'webapp/src/views/ForbiddenView.vue',
        'webapp/src/stores/auth.ts',
        'webapp/src/stores/books.ts',
        'webapp/src/router/index.ts',
    ]
    
    missing_vue_files = []
    
    for file_path in vue_files:
        full_path = os.path.join(os.path.dirname(__file__), file_path)
        if os.path.exists(full_path):
            print(f"   ‚úÖ {file_path}")
        else:
            print(f"   ‚ùå {file_path}")
            missing_vue_files.append(file_path)
    
    if missing_vue_files:
        print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç Vue —Ñ–∞–π–ª—ã: {missing_vue_files}")
        return False
    else:
        print("\n‚úÖ –í—Å–µ Vue —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ!")
        return True

def test_handlers_update():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    
    print("\nü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–æ—Ç–∞...")
    
    try:
        handlers_path = os.path.join(os.path.dirname(__file__), 'bot', 'handlers.py')
        
        with open(handlers_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ web_app –≤ –∫–æ–¥–µ
        if 'web_app={"url":' in content:
            print("   ‚úÖ –ö–Ω–æ–ø–∫–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        else:
            print("   ‚ùå –ö–Ω–æ–ø–∫–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–∞–Ω–¥—ã catalog
        if 'async def catalog(' in content:
            print("   ‚úÖ –ö–æ–º–∞–Ω–¥–∞ /catalog –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        else:
            print("   ‚ùå –ö–æ–º–∞–Ω–¥–∞ /catalog –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥—ã catalog
        if 'CommandHandler("catalog", catalog)' in content:
            print("   ‚úÖ –ö–æ–º–∞–Ω–¥–∞ /catalog –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞")
        else:
            print("   ‚ùå –ö–æ–º–∞–Ω–¥–∞ /catalog –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞")
            return False
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç—ã—Ö —Ç–µ—Å—Ç–æ–≤ Book Bot...")
    print("=" * 50)
    
    tests = [
        ("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞", test_project_structure()),
        ("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", test_config()),
        ("Vue –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", test_vue_structure()),
        ("–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞", test_handlers_update()),
    ]
    
    results = []
    
    for test_name, test_func in tests:
        try:
            result = test_func
            results.append((test_name, result))
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ '{test_name}': {e}")
            results.append((test_name, False))
    
    print("\n" + "=" * 50)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤:")
    
    passed = 0
    for test_name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"   - {test_name}: {status}")
        if result:
            passed += 1
    
    print(f"\nüéØ –ò—Ç–æ–≥–æ: {passed}/{len(results)} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == len(results):
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("   1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
        print("   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –∏ —Å–æ–±–µ—Ä–∏—Ç–µ Vue: ./build.sh")
        print("   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ TELEGRAM_BOT_TOKEN –≤ bot/config.py")
        print("   4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python -m bot.main")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞.")

if __name__ == "__main__":
    main()